package scheduler;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import org.joda.time.Interval;
import org.openmrs.module.operationtheater.scheduler.domain.PlannedSurgery;

import org.joda.time.DateTime;
import java.util.Date
import org.joda.time.Period;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################


//Operation Theater occupancy: two PlannedSurgeries in the same Location with overlapping periods
rule "overlappingSurgeriesInSameOperationTheater"
    when
        $left: PlannedSurgery($location: location)
        $right: PlannedSurgery(this != $left, location == $location, isOverlapping($left))
        //prevent the double execution of this rule (AB, BA)
        eval( System.identityHashCode($left) < System.identityHashCode($right))
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

//// ############################################################################
//// Soft constraints
//// ############################################################################

rule "firstComeFirstServed"
    when
        $surgery: PlannedSurgery($start : start, start != null)
    then
        DateTime $created = new DateTime($surgery.getSurgery().getDateCreated().getTime());
        Period $period = new Period($created, $start);

        scoreHolder.addSoftConstraintMatch(kcontext, -$period.getDays()*24 -$period.getHours());
end
